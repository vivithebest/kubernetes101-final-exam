apiVersion: apps/v1
kind: {{ if eq .Values.servicename "rng" }} DaemonSet {{else}} Deployment {{end}}
metadata:
  labels:
    projectname: {{ .Values.project }}
    environment: {{ .Values.environment }}
    servicename: {{.Values.servicename }}
  name: {{.Values.servicename }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      servicename: {{.Values.servicename }}
  template:
    metadata:
      labels:
        projectname: {{ .Values.project }}
        environment: {{ .Values.environment }}
        servicename: {{.Values.servicename }}
    spec:
      containers:
        - image: {{ if eq .Values.servicename "redis" }} "redis" {{ else }} "{{ .Values.image.registry }}/{{.Values.servicename}}:{{ .Values.image.tag }}" {{ end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          name: {{.Values.servicename }}
          env: 
            - name: PROJECT_NAME
              value: {{ .Values.project }}
            - name: ENVIRONMENT
              value: {{ .Values.environment }}
            - name: SERVICE_NAME
              value: {{.Values.servicename }}
          {{- if .Values.healthcheck.enabled -}}
          {{ if eq .Values.servicename "redis" }}
          livenessProbe:
            tcpSocket:
              port: 6379
            initialDelaySeconds: 5
          readinessProbe:
            tcpSocket:
              port: 6379
            initialDelaySeconds: 5
          {{ else }}
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 10
          {{- end }}
          {{- end }}